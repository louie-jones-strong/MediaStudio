@import "TextStyle.css";
@import "ColorPickerStyle.css";

html, body{
	margin: 0px;
	height: 100%;
	user-select: none; /* supported by Chrome and Opera */
	-webkit-user-select: none; /* Safari */
	-khtml-user-select: none; /* Konqueror HTML */
	-moz-user-select: none; /* Firefox */
	-ms-user-select: none; /* Internet Explorer/Edge */

}

/* Buttons */
button{
	transition-duration: 0.5s;
	border: none;
	margin: 5px;
	background-color: white;
	color: black;
	border-radius: 0.25em;
	box-shadow:	0.125em 0.125em 0.25em 0 rgba(0,0,0,50%);
	display: flex;
	align-items: center;

	transition: transform 0.2s;
	transform: scale(1);
}
button > *{
	margin: 0;
}

button img{
	max-height: 2em;
	max-width: 2em;
}

button:hover{
	box-shadow: 0px 0px 5px 5px rgba(0,0,0,0.3);
	transform: scale(1.1);
}


/* layout */
body{
	display: grid;
	height: 100%;

	--RecentColoursCellSize: 2.5em;
	--RecentColoursPad: 0.5em;

	grid-template-columns: 60px 20px calc(var(--RecentColoursCellSize) * 4.25) minmax(200px, 1fr) 225px;
	grid-template-rows: 50px minmax(300px, 1fr) 200px 1.5em;
	grid-template-areas:
			"header header header header header"
			"toolListSideBar content content content layerSideBar"
			"colorP colorP recentColors toolInfo layerSideBar"
			"footer footer footer footer footer";
	background-color: #444;
	color: #fff;
}

header{
	grid-area: header;
	display: flex;
	align-items: center;
	background-color: rgb(160, 0, 0);
}

#toolListSideBar{
	grid-area: toolListSideBar;
	overflow: hidden;
	overflow-y:auto;
}

#content{
	position: relative;
	grid-area: content;
	overflow: auto;
	background-color: #222;

	display: flex;
	justify-content: center;
	align-items: center;
}

.canvas{
	background: url(ColorPicker/alpha.png);
	background-size: 16px 16px;
}

.colorPickers{
	grid-area: colorP;
}

.recentColors{
	grid-area: recentColors;
}

.toolInfo{
	grid-area: toolInfo;
	padding-left: 10px;
}

#layerSideBar{
	grid-area: layerSideBar;
	overflow-y: auto;
	overflow-x: hidden;
}

#layerListHolder{
	display: flex;
	flex-direction: column-reverse;

}

#layerOptions{
	display: flex;
}

footer{
	grid-area: footer;
	background-color: #111;
	display: flex;
	align-items: center;
}

#footer{

	display: flex;
	align-items: center;
}

#footer > *{
	margin-inline: 0.5em;
}

.SelectedOptions{
	display: grid;
	grid-template-rows: 75px 75px;
	grid-template-columns: max-content max-content max-content max-content;
}


/* slider holder */
.sliderHolder{
	margin-block: 0.25em;
	margin-inline: 0.75em;
}

/* iconButton */
.iconButton, .optionsBarItem{
	height: 50px;
	width: 50px;
	margin: 5px;
	transition-duration: 0.3s;
	opacity: 0.5;
	display: flex;
	justify-content: center;
	align-items: center;
}

.iconButton:hover, .optionsBarItem:hover, .selected{
	opacity: 1;
}

.iconButton img, .optionsBarItem img{
	border-radius: 10px;
	transition-duration: 0.3s;
	background-color: black;
	height: 75%;
	width:  75%;
}

.iconButton:hover img, .optionsBarItem:hover img{
	height: 85%;
	width:  85%;
}

.selected img, .selected:hover img{
	background-color: white;
	height: 100%;
	width: 100%;
}

.disabled img, .disabled:hover img{
	background-color: rgb(50, 0, 0);
	height: 60%;
	width: 60%;
	cursor: not-allowed;
}

.layer{
	border:dashed transparent 2px;
	margin: 3px;
	margin-block: 0.25em;
	background-color: #222;
	border-radius: 1em;
	padding: 0.25em;
}

.selected.layer{
	border:dashed rgb(160, 0, 0) 2px;
}

.layerHeader{
	display: flex;
}
.layerHeader > h3{
	width: 10em;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
  }


.effect{
	margin-left: 0.75em;
	display: flex;
	margin-block: 0.25em;
}

.effect > button{
	margin: 0em;
	margin-left: 0.5em;
}


#overlayHolder{
	z-index: 10;
	display:flex;

	justify-content: center;
	align-items: center;
	position:absolute;
	left: 0px;
	right: 0px;
	top: 0px;
	bottom: 0px;
	background-color: rgba(0,0,0,0);
	transition: background-color 0.5s;
}

#overlayHolder.show{
	background-color: rgba(0,0,0,0.5);
}

#overlayHolder.hide{
	display: none;
}

.popup{
	position: absolute;
	display: flex;
	justify-content: center;
	flex-direction: column;
	width: max-content;
	height: max-content;
	border-radius: 2em;
	border: rgb(160, 0, 0) 2px solid;
	background-color: #444;

	overflow: hidden;
}

.popupCover{
	max-height: 30vh;
}

.popupContent{

	padding: 1em;
	padding-top: 0px;
	display: flex;
	justify-content: center;
	flex-direction: column;
	width: max-content;
	height: max-content;
}

.popupButtonGroup{
	display: flex;
	justify-content: center;
}

.popup > input{
	margin-bottom: 1em;
}

.center{
	justify-content: center;
}


#canvas{
	position: relative;
}


.resizeableSquareOutline{
	position: absolute;
	border: red dashed calc(2px * var(--canvasZoom));
}

.layerHandle{
	position: absolute;
	border-radius: 50%;
	border: red solid calc(5px * var(--canvasZoom));

	padding: calc(20px * var(--canvasZoom));
	cursor: move;
}

#setupHolder{
	display: flex;
}
#setupHolder > *{
	width: 15em;
}